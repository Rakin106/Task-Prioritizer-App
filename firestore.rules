rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // user-scoped tasks: /users/{userId}/tasks/{taskId}
    match /users/{userId}/tasks/{taskId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // root tasks collection: /tasks/{taskId} â€” each doc must have an "owner" equal to the user's uid
    match /tasks/{taskId} {
      // single doc read
      allow get: if request.auth != null
        && resource.data.owner == request.auth.uid;

      // queries (list) must filter by owner==auth.uid
      allow list: if request.auth != null
        && request.query.where('owner', '==', request.auth.uid);

      // create: authenticated and request sets owner == requester
      allow create: if request.auth != null
        && request.resource.data.owner is string
        && request.resource.data.owner == request.auth.uid;

      // update: authenticated, existing owner equals requester, and owner is not changed
      allow update: if request.auth != null
        && resource.data.owner == request.auth.uid
        && request.resource.data.owner == resource.data.owner;

      // delete: authenticated and existing owner equals requester
      allow delete: if request.auth != null
        && resource.data.owner == request.auth.uid;
    }
  }
}